package com.example.aleppocollage.ui.registerstudentimport androidx.lifecycle.MutableLiveDataimport androidx.lifecycle.ViewModelimport androidx.lifecycle.viewModelScopeimport com.example.aleppocollage.model.user.domain.Studentimport com.example.aleppocollage.repository.register.RegisterRepositoryimport com.example.aleppocollage.util.Resourceimport kotlinx.coroutines.flow.*import kotlinx.coroutines.launchclass RegisterStudentViewModel : ViewModel() {    private val registerRepository = RegisterRepository()    var studentResult: MutableLiveData<Resource<Student>>? = null    fun getOneStudent(name: String, password: String) = viewModelScope.launch {        studentResult = MutableLiveData()        registerRepository.getOneStudent(name, password).onStart {            studentResult!!.postValue(Resource.Loading(true))        }.catch {            it.message?.let { message ->                studentResult!!.postValue(Resource.Error(message))            }        }.collect { student ->            if (student == null) {                studentResult!!.postValue(Resource.FAILURE("اسم المستحدم أو كلمة المرور خاطئة"))            } else {                studentResult!!.postValue(Resource.Success(student))            }        }    }}