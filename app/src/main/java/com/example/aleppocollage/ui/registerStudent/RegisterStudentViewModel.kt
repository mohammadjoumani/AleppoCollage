package com.example.aleppocollage.ui.registerStudentimport android.content.Contextimport androidx.lifecycle.LiveDataimport androidx.lifecycle.MutableLiveDataimport androidx.lifecycle.ViewModelimport androidx.lifecycle.viewModelScopeimport com.example.aleppocollage.MainActivityimport com.example.aleppocollage.Rimport com.example.aleppocollage.model.user.domain.Studentimport com.example.aleppocollage.repository.register.RegisterRepositoryimport com.example.aleppocollage.util.Resourceimport kotlinx.coroutines.flow.*import kotlinx.coroutines.launchclass RegisterStudentViewModel() : ViewModel() {    val registerRepository = RegisterRepository()    private val _studentResult = MutableLiveData<Resource<Student>>()    val studentResult: LiveData<Resource<Student>> = _studentResult    fun getOneStudent(name: String, password: String) {        viewModelScope.launch {            registerRepository.getOneStudent(name, password)                .onStart {                    _studentResult.postValue(Resource.Loading(true))                }                .catch {                    it.message?.let { message ->                        _studentResult.postValue(Resource.Error(message))                    }                }                .collect { student ->                    if (student == null) {                        _studentResult.postValue(Resource.FAILURE("اسم المستحدم أو كلمة المرور خاطئة"))                    } else {                        _studentResult.postValue(Resource.Success(student))                    }                }        }    }}