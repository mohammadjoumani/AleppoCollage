package com.example.aleppocollage.ui.registerimport android.annotation.SuppressLintimport android.os.Buildimport android.os.Bundleimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport android.view.WindowManagerimport androidx.fragment.app.Fragmentimport androidx.lifecycle.ViewModelProviderimport androidx.navigation.fragment.findNavControllerimport com.example.aleppocollage.MainActivityimport com.example.aleppocollage.Rimport com.example.aleppocollage.databinding.FragmentRegsiterBindingimport com.getkeepsafe.taptargetview.TapTargetimport com.getkeepsafe.taptargetview.TapTargetSequenceimport com.getkeepsafe.taptargetview.TapTargetViewclass RegisterFragment : Fragment() {    private var _binding: FragmentRegsiterBinding? = null    private val binding get() = _binding!!    private lateinit var registerViewModel: RegisterViewModel    @SuppressLint("ResourceType")    override fun onCreateView(        inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {        _binding = FragmentRegsiterBinding.inflate(inflater, container, false)        val view = binding.root        if (Build.VERSION.SDK_INT >= 21) {            val window = (activity as MainActivity).window            window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS)            window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS)            window.statusBarColor = this.resources.getColor(R.color.colorPurple)        }        registerViewModel = ViewModelProvider(this).get(RegisterViewModel::class.java)        binding.btnRegisterStudent.setOnClickListener {            val action =                RegisterFragmentDirections.actionNavigationRegisterToNavigationRegisterStudent()            findNavController().navigate(action)        }        binding.btnRegisterTeacher.setOnClickListener {            val action =                RegisterFragmentDirections.actionRegisterFragmentToRegisterTeacherFragment()            findNavController().navigate(action)        }        return view    }    override fun onDestroyView() {        super.onDestroyView()        _binding = null    }}